@model GeicoData.Models.Task

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <script>
        function TaskFind() {
            alert('TaskFind');
        }
        function TaskFindCancel() {
            alert('TaskFindCancel');
        }
    </script>
</head>
<body>
    @*<div style="width: 1290px; background-color: lightsteelblue; padding: 0px 0px 0px 10px;">*@
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    <div class="widthMax">
        @*<div class="form-horizontal">*@
        <h4>Task</h4>
        <div id="onTaskerrorWindow" name="onTaskerrorWindow" class="hidden">
            <label id="onTaskerrors" name="onTaskerrors"></label>
        </div>
        <hr />
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    <div class="container widthMax">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row" style="display:none">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-6" })
                <div>
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
                <div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-6" })
                <div>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Due, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Due, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Due, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>            
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>            
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-6" })
                <div>
                    @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-6" })
                <div>
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>            


    </div>
    }
</body>
</html>
